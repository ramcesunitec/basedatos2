CREATE TABLE ALMACEN(
NUMERO_ALMACEN INTEGER,
UBICACION_ALMACEN VARCHAR2(50),
CONSTRAINT  /*Mantiene integridad en servidores*/PK_NUM_ALM PRIMARY KEY(NUMERO_ALMACEN)
);
/*
CREATE OR REPLACE PROCEDURE GUARDAR_ALMACEN(
MY_NUMERO_ALMACEN IN integer,
MY_UBICACION_ALMACEN IN varchar2
)
AS
BEGIN 
insert into ALMACEN values (MY_NUMERO_ALMACEN,MY_UBICACION_ALMACEN);
END;
/

BEGIN
GUARDAR_ALMACEN (321,'ECATEPEC');
END;
/
*/
CREATE TABLE CLIENTE(
NUMERO_CLIENTE INTEGER,
NUMERO_ALMACEN INTEGER,
NOMBRE_CLIENTE VARCHAR2(80),
constraint Pk_n_c Primary key(NUMERO_CLIENTE),
constraint Fk1_n_a Foreign Key(NUMERO_ALMACEN)
references almacen(NUMERO_ALMACEN)
);

CREATE TABLE VENDEDOR(
NUMERO_VENDEDOR integer,
NOMBRE_VENDEDOR VARCHAR2(80),
AREA_VENTAS VARCHAR2(80),
constraint Pk_n_v primary key(NUMERO_VENDEDOR)
);

CREATE TABLE VENTAS(
ID_VENTAS integer,
NUMERO_CLIENTE integer,
NUMERO_VENDEDOR integer,
MONTO_VENTA float(126),
constraint Pk_id_v primary key(ID_VENTAS),
constraint Fk1_n_cl foreign key(NUMERO_CLIENTE) references CLIENTE(NUMERO_CLIENTE),
constraint Fk1_n_ve foreign key(NUMERO_VENDEDOR)references VENDEDOR(NUMERO_VENDEDOR)
);












--EJEMPLO DE UNA TABLA Y SU PROCEDIMIENTO ALMACENADO PARA GUARDAR CON PRIMARY KEY IMPUESTO
CREATE TABLE CALIFICACIONES(
ID_CALIFICACION integer,
MATERIA varchar2(80),
VALOR float,
constraint Pk_id_cal primary key(ID_CALIFICACION)
);

--GENERAR UNA SECUENCIA 
CREATE sequence SEC_CALIFICACIONES
start WITH 1
increment BY 1
nomaxvalue;

--AQUI VA EL PROCEDIMIENTO 
CREATE OR REPLACE PROCEDURE GUARDAR_CALIFICACIONES(
MY_ID_CALIFICACIONE OUT INTEGER,
MY_MATERIA varchar2,
MY_VALOR IN float
)
AS 
BEGIN 
SELECT SEC_CALIFICACIONES.NEXTVAL INTO MY_ID_CALIFICACION FROM DUAL;
insert INTO CALIFICACIONES VALUES(MY_ID_CALIFICACION,MY_MATERIA,MY_VALOR);
END;
/